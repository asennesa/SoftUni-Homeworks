import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedHashMap;

public class SoftuniExamResults {
    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        String input = "";

        LinkedHashMap<String,Integer>languageParticipants = new LinkedHashMap<>();
        LinkedHashMap<String,Integer>participantPoints = new LinkedHashMap<>();

        while(!"exam finished".equalsIgnoreCase(input=reader.readLine())){
            String[] split = input.split("-");
            String name = split[0];
            String language = split[1];
            //String points = split[2];
            if (!languageParticipants.containsKey(language)) {
                languageParticipants.put(language,0);
                languageParticipants.put(language,languageParticipants.get(language)+1);
            }else{
                languageParticipants.put(language,languageParticipants.get(language)+1);
            }
            if(!participantPoints.containsKey(name)){
                participantPoints.put(name,Integer.parseInt(split[2]));

            }else {
                if (split.length >= 3) {
                    if (Integer.parseInt(split[2]) > participantPoints.get(name)) {
                        participantPoints.put(name, Integer.parseInt(split[2]));

                    }
                }
            }
            if(language.equalsIgnoreCase("banned")){
                participantPoints.remove(name);
            }
            //languageParticipants.remove("banned");

        }
        System.out.println("Results:");
        participantPoints.entrySet().stream().sorted((e1,e2)->{
            int sort = Integer.compare(e2.getValue(),e1.getValue());
            if(sort ==0){
                sort = e1.getKey().compareTo(e2.getKey());
            }
            return sort;
        }).forEach(e->{

            System.out.println(String.format("%s | %d",e.getKey(),e.getValue()));
        });
        System.out.println("Submissions:");
        languageParticipants.entrySet().stream().filter(e->!e.getKey().equalsIgnoreCase("banned"))
                .sorted((e1,e2)->{
                    int sort = Integer.compare(e2.getValue(),e1.getValue());
                    if(sort==0){
                        sort=e1.getKey().compareTo(e2.getKey());
                    }
                    return sort;
                }).forEach(e-> System.out.println(String.format("%s - %d",e.getKey(),e.getValue())));




    }
}
