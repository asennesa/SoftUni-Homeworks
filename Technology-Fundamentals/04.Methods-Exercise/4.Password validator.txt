import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
public class misssing {
    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));

        String pass = reader.readLine();
        if (lengthTest(pass)) {
            System.out.println("Password must be between 6 and 10 characters");
        }
        if (symbolTest(pass)) {
            System.out.println("Password must consist only of letters and digits");
        }
        if (onlyNumsTest(pass)) {
            System.out.println("Password must consist only of letters and digits");
        }
        if (digitsTest(pass)) {
            System.out.println("Password must have at least 2 digits");
        }
        if (!lengthTest(pass) && !symbolTest(pass) && !digitsTest(pass) && !onlyNumsTest(pass)) {
            System.out.println("Password is valid");
        }


    }

    static boolean lengthTest(String pass) {
        boolean result = false;
        if (pass.length() < 6 || pass.length() > 10) {
            result = true;
        }
        return result;
    }

    static boolean symbolTest(String pass) {
        boolean result = false;
        if (!pass.matches("[a-zA-Z0-9]*")) {
            result = true;
        }
        return result;
    }

    static boolean digitsTest(String pass) {
        boolean result = false;
        int count = 0;
        for (int i = 0; i < pass.length() ; i++) {
            if (Character.isDigit(pass.charAt(i))) {
                count++;
            }

        }
        if (count < 2) {
            result = true;
        }
        return result;
    }
    static boolean onlyNumsTest(String pass) {
        boolean result = false;

        int count = 0;
        for (int i = 0; i < pass.length()-1 ; i++) {
            if (Character.isDigit(pass.charAt(i))) {
                count++;
            }

        }
        if (count == pass.length()-1) {
            result = true;
        }
        return result;
    }
}
